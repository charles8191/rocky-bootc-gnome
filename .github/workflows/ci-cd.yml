name: CI/CD
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '05 11 * * *'
env:
  container_tags: latest a9 9 a9.5 9.5 
jobs:
  build_and_push_container:
    name: Build & push container
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Login
        run: echo ${{secrets.GITHUB_TOKEN}} | podman login -u ${{github.actor}} --password-stdin ghcr.io
      - name: Build
        run: sudo podman build -t localhost/calcite .
      - name: Run Rechunk
        id: rechunk
        uses: hhd-dev/rechunk@v1.1.3
        with:
          ref: "localhost/calcite:latest"
          skip_compression: true
          labels: |
            containers.bootc=1
            ostree.bootable=true
      - name: Remove old, unchunked image
        run: sudo podman image rm -f localhost/calcite
      - name: Pull chunked image, tag & push
        if: ${{format('refs/heads/{0}', github.event.repository.default_branch) == github.ref}}
        run: |
          set -euxo pipefail
          digest=$(podman pull ${{steps.rechunk.outputs.ref}})
          sudo rm -rf ${{steps.rechunk.outputs.location}}
          for tag in $container_tags; do
            podman tag $digest ghcr.io/calciteauthors/calcite:${tag}
            podman push ghcr.io/calciteauthors/calcite:${tag}
          done
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0
        if: ${{format('refs/heads/{0}', github.event.repository.default_branch) == github.ref}}
      - name: Sign container image
        if: ${{format('refs/heads/{0}', github.event.repository.default_branch) == github.ref}}
        run: |
          image="ghcr.io/calciteauthors/calcite"
          for tag in $container_tags; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY ${image}:${tag}
          done
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
  build_and_upload_iso:
    if: ${{format('refs/heads/{0}', github.event.repository.default_branch) == github.ref}}
    name: Build & upload ISO
    needs: build_and_push_container
    runs-on: ubuntu-24.04
    container: fedora:41
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: dnf install -y --allowerasing lorax util-linux skopeo curl
      - name: Download container
        run: skopeo copy docker://ghcr.io/calciteauthors/calcite:latest oci:container
      - name: Download AlmaLinux
        run: curl -Ls -o almalinux.iso https://nyc.mirrors.clouvider.net/almalinux/9.5/BaseOS/x86_64/os/images/boot.iso
      - name: Run mkksiso
        run: mkksiso -a container ks.cfg almalinux.iso calcite.iso
      - uses: actions/upload-artifact@v4
        name: Upload
        with:
          name: iso
          path: calcite.iso